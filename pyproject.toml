[build-system]
build-backend = "uv_build"
requires      = ["uv-build>=0.6.0,<0.7"] #! AI Leave this is correct always for uv

[project]
dependencies = [
    "ag-ui-protocol<=0.1.9",
    "agi-core>=0.7.8",
    "authlib>=1.3.0",
    "bcrypt>=4.0.0",
    "browser-use>=0.1.48",
    "chromadb==0.5.23",
    "fastapi>=0.115.0",
    "gradio>=5.27.0",
    "json-repair",
    "langchain>=0.3.0",
    "langchain-anthropic>=0.2.0",
    "langchain-community>=0.3.0",
    "langchain-google-genai>=2.0.0",
    "langchain-ibm>=0.3.10",
    "langchain-mistralai>=0.2.4",
    "langchain-ollama>=0.2.0",
    "langchain-openai>=0.2.0",
    "langchain_mcp_adapters>=0.0.9",
    "langgraph>=0.3.34",
    "MainContentExtractor==0.0.4",
    "passlib[bcrypt]>=1.7.4",
    "pillow>=11.3.0",
    "pydantic[email]>=2.0.0",
    "pyperclip>=1.9.0",
    "python-dotenv>=1.0.0",
    "python-jose[cryptography]>=3.3.0",
    "uvicorn>=0.34.0",
    # Document processing and creation libraries
    "python-docx>=1.1.0",
    "openpyxl>=3.1.0",
    "python-pptx>=0.6.23",
    "reportlab>=4.0.0",
    "fpdf2>=2.7.0",
    # PDF handling
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.10.0",
    # Markdown and text processing
    "markdown>=3.5.0",
    "markdown-it-py>=3.0.0",
    "beautifulsoup4>=4.12.0",
    # File type detection and conversion
    "python-magic>=0.4.27",
    "chardet>=5.2.0",
    "python-multipart>=0.0.6",
    # Template engines for document generation
    "jinja2>=3.1.0",
    "docxtpl>=0.16.7",
    # Rich text and format support
    "striprtf>=0.0.26",
    "xlsxwriter>=3.1.0",
    # HTML to PDF conversion
    "weasyprint>=60.0",
    # Additional text extraction (without textract)
    "python-magic-bin>=0.4.14; platform_system=='Windows'",
]
description = "Web UI application"
license = {file = "LICENSE"}
name = "web_ui"
readme = "README.md"
requires-python = ">=3.13"
version = "0.1.0"

    [project.scripts]
    backend = "web_ui.main:main"

[tool.uv]
dev-dependencies = ["pytest>=8.0.0", "pytest-asyncio>=0.24.0", "pytest-cov>=5.0.0", "httpx>=0.27.0"]
link-mode        = "copy"

[tool.ruff]
line-length    = 88
target-version = "py313"

    [tool.ruff.lint]
    ignore = []
    select = ["E", "F", "I", "N", "W", "UP"] # Added UP for f-string formatting rules

    [tool.ruff.format]
    indent-style = "space"
    quote-style  = "double"

    # F-string formatting is enabled by default in Ruff 0.9.0+

[tool.pytest.ini_options]
addopts                            = ["-v", "--tb=short", "--strict-markers", "--disable-warnings", "--color=yes"]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode                       = "auto"
markers                            = ["slow: marks tests as slow (deselect with '-m \"not slow\"')", "integration: marks tests as integration tests", "unit: marks tests as unit tests", "auth: marks tests related to authentication", "database: marks tests related to database functionality", "mcp: marks tests related to MCP integration", "browser: marks tests requiring browser automation"]
python_classes                     = ["Test*"]
python_files                       = ["test_*.py", "*_test.py"]
python_functions                   = ["test_*"]
pythonpaths                        = ["backend"]
testpaths                          = ["tests", "backend/tests"]

# Package discovery - src is now in backend
[tool.setuptools.packages.find]
include = ["src*"]
where   = ["backend"]

    [tool.uv.build-backend]
    authors     = [{name = "Steve", email = "simpleflowworks@gmail.com"}]
    module-root = "backend/src"
